trigger:
  branches:
    include:
      - main

pool:
  name: my-agent-2  # Custom VMSS-based agent pool

variables:
  - group: kv-secrets            # Contains: StorageAccountSasToken
  - group: deployment-settings   # Contains: storageAccountName, storageContainer
  - name: buildDir
    value: 'build-artifacts'
  - name: artifactName
    value: 'flask-app.zip'

stages:
- stage: BuildAndUpload
  displayName: 'Build Flask App and Upload to Blob Storage'
  jobs:
  - job: Upload
    displayName: 'Install Tools, Package App, Upload to Blob'
    steps:
    - checkout: self

    - task: Bash@3
      displayName: 'Install zip, curl, Azure CLI'
      inputs:
        targetType: 'inline'
        script: |
          sudo apt-get update
          sudo apt-get install -y zip curl

          if ! command -v az &> /dev/null; then
            echo "Azure CLI not found. Installing..."
            curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          else
            echo "Azure CLI is already installed."
          fi

    - task: Bash@3
      displayName: 'Create zip archive of Flask app'
      inputs:
        targetType: 'inline'
        script: |
          mkdir -p $(buildDir)
          zip -r $(buildDir)/$(artifactName) . -x "*.git*" "*.venv*" "__pycache__/*"

    - task: AzureCLI@2
      displayName: 'Upload Flask app zip to Azure Blob'
      inputs:
        azureSubscription: 'HTS-L2-CS002-ARM-SC'  # Replace with your service connection name
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage blob upload \
            --account-name $(storageAccountName) \
            --container-name $(storageContainer) \
            --name $(artifactName) \
            --file $(buildDir)/$(artifactName) \
            --sas-token "$(StorageAccountSasToken)" \
            --overwrite

    - task: AzureCLI@2
      displayName: 'Upload startup.sh to Azure Blob'
      inputs:
        azureSubscription: 'HTS-L2-CS002-ARM-SC'  # Replace with your service connection name
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage blob upload \
            --account-name $(storageAccountName) \
            --container-name $(storageContainer) \
            --name startup.sh \
            --file startup.sh \
            --sas-token "$(StorageAccountSasToken)" \
            --overwrite
